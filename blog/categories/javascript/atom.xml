<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | easy cure]]></title>
  <link href="http://saito1369.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://saito1369.github.io/"/>
  <updated>2025-01-29T16:44:35+09:00</updated>
  <id>http://saito1369.github.io/</id>
  <author>
    <name><![CDATA[saito1369]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SQLite3 の様々な言語での利用]]></title>
    <link href="http://saito1369.github.io/blog/2017-02-09-SQLite3.html"/>
    <updated>2017-02-09T00:00:00+09:00</updated>
    <id>http://saito1369.github.io/blog/SQLite3</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. perl</a>
<ul>
<li><a href="#sec-1-1">1.1. database の作成とデータの挿入</a></li>
<li><a href="#sec-1-2">1.2. select 文とデータの取り出し</a></li>
<li><a href="#sec-1-3">1.3. 参考URL</a></li>
</ul>
</li>
<li><a href="#sec-2">2. python</a>
<ul>
<li><a href="#sec-2-1">2.1. database の作成とデータの挿入</a></li>
<li><a href="#sec-2-2">2.2. select 文とデータの取り出し</a></li>
<li><a href="#sec-2-3">2.3. 参考URL</a></li>
</ul>
</li>
<li><a href="#sec-3">3. ruby</a>
<ul>
<li><a href="#sec-3-1">3.1. database の作成とデータの挿入</a></li>
<li><a href="#sec-3-2">3.2. select 文とデータの取り出し</a></li>
<li><a href="#sec-3-3">3.3. 参考URL</a></li>
</ul>
</li>
<li><a href="#sec-4">4. julia</a>
<ul>
<li><a href="#sec-4-1">4.1. database の作成とデータの挿入</a></li>
<li><a href="#sec-4-2">4.2. select 文とデータの取り出し</a></li>
<li><a href="#sec-4-3">4.3. 参考URL</a></li>
</ul>
</li>
<li><a href="#sec-5">5. R</a>
<ul>
<li><a href="#sec-5-1">5.1. database の作成とデータの挿入</a></li>
<li><a href="#sec-5-2">5.2. select 文とデータの取り出し</a></li>
<li><a href="#sec-5-3">5.3. 参考URL</a></li>
</ul>
</li>
<li><a href="#sec-6">6. javascript(node.js)</a>
<ul>
<li><a href="#sec-6-1">6.1. database の作成とデータの挿入</a></li>
<li><a href="#sec-6-2">6.2. select 文とデータの取り出し</a></li>
<li><a href="#sec-6-3">6.3. 参考URL</a></li>
</ul>
</li>
</ul>
</div>
</div>
<p>
#+File Created: <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-02-09 Thu 13:42&gt;</span></span><br />
#+Last Updated: <span class="timestamp-wrapper"><span class="timestamp">&lt;2018-11-21 Wed 20:51&gt;</span></span><br />
</p>
<p>
SQLite3 の簡単な利用方法についてまとめておく.<br />
いくつかの script 言語での書き方を比較する.<br />
</p>

<p>
<!-- more --><br />
</p>

<p>
利用環境: OSX Yosemite 10.10.5<br />
</p>

<div class="org-src-container">

<pre class="src src-sh">sqlite3 --version
</pre>
</div>

<pre class="example">
3.13.0 2016-05-18 10:57:30 fc49f556e48970561d7ab6a2f24fdd7d9eb81ff2
</pre>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> perl</h2>
<div class="outline-text-2" id="text-1">
<div class="org-src-container">

<pre class="src src-sh">perl --version
</pre>
</div>

<pre class="example">
This is perl 5, version 18, subversion 2 (v5.18.2) built for darwin-thread-multi-2level
(with 2 registered patches, see perl -V for more detail)

Copyright 1987-2013, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.
</pre>
</div>

<div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> database の作成とデータの挿入</h3>
<div class="outline-text-3" id="text-1-1">
<div class="org-src-container">

<pre class="src src-perl"><span style="color: #20b2aa; font-weight: bold;">use</span> <span style="color: #00ff7f;">strict</span>;
<span style="color: #20b2aa; font-weight: bold;">use</span> <span style="color: #00ff7f;">warnings</span>;
<span style="color: #20b2aa; font-weight: bold;">use</span> <span style="color: #00ff7f;">DBI</span>;

<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$db</span>=<span style="color: #ffa07a;">"test.db"</span>;
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$dbh</span>=DBI-&gt;<span style="color: #9370db;">connect</span>(<span style="color: #ffa07a;">"dbi:SQLite:dbname=$db"</span>);

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#12486;&#12540;&#12502;&#12523;&#20316;&#25104;</span>
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$sql</span>=<span style="color: #ffa07a;">"create table if not exists test_table_pl (id int, name, age int, gender)"</span>;
$dbh-&gt;<span style="color: #20b2aa; font-weight: bold;">do</span>($sql);  <span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#25147;&#12426;&#20516;&#12364;&#12394;&#12356;&#22580;&#21512;&#12399; do &#12391;&#23455;&#34892;</span>
<span style="color: #cd853f;">#</span><span style="color: #cd853f;">my $kth=$dbh-&gt;prepare($sql);</span>
<span style="color: #cd853f;">#</span><span style="color: #cd853f;">$kth-&gt;execute();</span>

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">placeholder &#12395;&#12424;&#12427;&#12487;&#12540;&#12479;&#12398;&#25407;&#20837;</span>
$sql    =<span style="color: #ffa07a;">"insert into test_table_pl values (?,?,?,?)"</span>;
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">placeholder &#12434;&#29992;&#12356;&#12427;&#22580;&#21512;&#21450;&#12403;&#25147;&#12426;&#20516;&#12364;&#12354;&#12427;&#22580;&#21512;&#12399;,</span>
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">prepare -&gt; execute &#12391;&#23455;&#34892;</span>
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$sth</span> =$dbh-&gt;prepare($sql);
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #ffff00; background-color: #000080; font-weight: bold;">@vls</span> =(1,<span style="color: #ffa07a;">'hoge'</span>,20,<span style="color: #ffa07a;">'m'</span>);
$sth-&gt;execute(<span style="color: #ffff00; background-color: #000080; font-weight: bold;">@vls</span>);

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#20999;&#26029;</span>
$dbh-&gt;disconnect;
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> select 文とデータの取り出し</h3>
<div class="outline-text-3" id="text-1-2">
<div class="org-src-container">

<pre class="src src-perl"><span style="color: #20b2aa; font-weight: bold;">use</span> <span style="color: #00ff7f;">strict</span>;
<span style="color: #20b2aa; font-weight: bold;">use</span> <span style="color: #00ff7f;">warnings</span>;
<span style="color: #20b2aa; font-weight: bold;">use</span> <span style="color: #00ff7f;">DBI</span>;

<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$db</span>=<span style="color: #ffa07a;">'test.db'</span>;
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$dbh</span> = DBI-&gt;<span style="color: #9370db;">connect</span>(<span style="color: #ffa07a;">"dbi:SQLite:dbname=$db"</span>);

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">select &#25991;</span>
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$sql</span> = <span style="color: #ffa07a;">"select * from test_table_pl order by id"</span>;
<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$sth</span> = $dbh-&gt;prepare($sql);
$sth-&gt;execute();

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#12487;&#12540;&#12479;&#12398;&#21462;&#12426;&#20986;&#12375;</span>
<span style="color: #20b2aa; font-weight: bold;">while</span>(<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #ffff00; background-color: #000080; font-weight: bold;">@row</span>=$sth-&gt;fetchrow_array) {
  <span style="color: #ff83fa;">print</span> <span style="color: #9370db;">join</span>(<span style="color: #ffa07a;">"\t"</span>,<span style="color: #ffff00; background-color: #000080; font-weight: bold;">@row</span>).<span style="color: #ffa07a;">"\n"</span>;
  <span style="color: #ff83fa;">print</span> <span style="color: #ffff00; background-color: #000080; font-weight: bold;">$row</span>[0].<span style="color: #ffa07a;">"\n"</span>;
}
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">hashref &#12391;&#21462;&#12426;&#20986;&#12379;&#12427;(&#12364;, &#19968;&#22238;&#12392;&#12427;&#12392;&#31354;&#12395;&#12394;&#12427;)</span>
<span style="color: #20b2aa; font-weight: bold;">while</span>(<span style="color: #20b2aa; font-weight: bold;">my</span> <span style="color: #9acd32;">$row</span>=$sth-&gt;fetchrow_hashref) {
  <span style="color: #ff83fa;">print</span> $row-&gt;{<span style="color: #ffa07a;">id</span>}.<span style="color: #ffa07a;">"\t"</span>.$row-&gt;{<span style="color: #ffa07a;">name</span>}.<span style="color: #ffa07a;">"\n"</span>;
}
</pre>
</div>

<pre class="example">
1 hoge  20  m
1
</pre>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> 参考URL</h3>
<div class="outline-text-3" id="text-1-3">
<p>
<a href="http://program.station.ez-net.jp/special/perl/dbi/sqlite.asp">http://program.station.ez-net.jp/special/perl/dbi/sqlite.asp</a><br />
<a href="http://d.hatena.ne.jp/perlcodesample/20091121/1246679588">http://d.hatena.ne.jp/perlcodesample/20091121/1246679588</a><br />
<a href="http://www.kent-web.com/perl/sqlite/step03.html">http://www.kent-web.com/perl/sqlite/step03.html</a><br />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> python</h2>
<div class="outline-text-2" id="text-2">
<div class="org-src-container">

<pre class="src src-sh">python --version
</pre>
</div>

<pre class="example">
Python 3.5.2 :: Anaconda custom (x86_64)
</pre>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> database の作成とデータの挿入</h3>
<div class="outline-text-3" id="text-2-1">
<div class="org-src-container">

<pre class="src src-python"><span style="color: #20b2aa; font-weight: bold;">import</span> sqlite3
<span style="color: #9acd32;">con</span> = sqlite3.connect(<span style="color: #ffa07a;">"test.db"</span>)
<span style="color: #9acd32;">cur</span> = con.cursor()

<span style="color: #9acd32;">sql</span> = <span style="color: #ffa07a;">"create table if not exists test_table_py (id int, name varchar(64), age int, gender varchar(32))"</span>
cur.execute(sql)

<span style="color: #9acd32;">sql</span> = <span style="color: #ffa07a;">"insert into test_table_py values (?,?,?,?)"</span>
<span style="color: #9acd32;">vls</span> = (1,<span style="color: #ffa07a;">'hoge'</span>,20,<span style="color: #ffa07a;">'m'</span>)
cur.execute(sql,vls);

con.commit()  <span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#22793;&#26356;&#12398;&#20445;&#23384;</span>
con.close()
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> select 文とデータの取り出し</h3>
<div class="outline-text-3" id="text-2-2">
<div class="org-src-container">

<pre class="src src-python"><span style="color: #20b2aa; font-weight: bold;">import</span> sqlite3

<span style="color: #9acd32;">con</span> = sqlite3.connect(<span style="color: #ffa07a;">"test.db"</span>)
<span style="color: #9acd32;">cur</span> = con.cursor()

<span style="color: #9acd32;">sql</span> = <span style="color: #ffa07a;">"select * from test_table_py order by id"</span>;
cur.execute(sql)

<span style="color: #9acd32;">result</span> = cur.fetchall()
<span style="color: #20b2aa; font-weight: bold;">for</span> row <span style="color: #20b2aa; font-weight: bold;">in</span> result:
    <span style="color: #cd853f;"># </span><span style="color: #cd853f;">tuple &#12391;&#36820;&#12387;&#12390;&#12367;&#12427;</span>
    <span style="color: #20b2aa; font-weight: bold;">print</span>(row)
    <span style="color: #20b2aa; font-weight: bold;">print</span>(row[0])
</pre>
</div>

<pre class="example">
(1, 'hoge', 20, 'm')
1
</pre>
</div>
</div>
<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> 参考URL</h3>
<div class="outline-text-3" id="text-2-3">
<p>
<a href="http://qiita.com/mas9612/items/a881e9f14d20ee1c0703">http://qiita.com/mas9612/items/a881e9f14d20ee1c0703</a><br />
<a href="http://www.python-izm.com/contents/external/sqlite.shtml">http://www.python-izm.com/contents/external/sqlite.shtml</a><br />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> ruby</h2>
<div class="outline-text-2" id="text-3">
<div class="org-src-container">

<pre class="src src-ruby">ruby --version
</pre>
</div>

<pre class="example">
ruby 1.9.3p551 (2014-11-13 revision 48407) [x86_64-darwin14.3.0]
</pre>

<p>
require 'sqlite3' がエラーとなるときはインストールします.<br />
</p>
<div class="org-src-container">

<pre class="src src-sh">gem install sqlite3
</pre>
</div>
</div>

<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> database の作成とデータの挿入</h3>
<div class="outline-text-3" id="text-3-1">
<div class="org-src-container">

<pre class="src src-ruby"><span style="color: #76ee00;">require</span> <span style="color: #ffa07a;">'sqlite3'</span>

db = <span style="color: #9370db;">SQLite3</span>::<span style="color: #9370db;">Database</span>.new(<span style="color: #ffa07a;">"test.db"</span>)

sql = <span style="color: #ffa07a;">"create table if not exists test_table_rb (id int, name varchar(64), age int, gender varchar(32))"</span>
db.execute(sql)

sql = <span style="color: #ffa07a;">"insert into test_table_rb values (1,'hoge',20,'m')"</span>
db.execute(sql)

sql = <span style="color: #ffa07a;">"insert into test_table_rb values (?,?,?,?)"</span>
vls = [2,<span style="color: #ffa07a;">'fuga'</span>,30,<span style="color: #ffa07a;">'f'</span>]
db.execute(sql,vls)
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">db.execute(sql,2,'fuga',30,'f')</span>
db.close
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> select 文とデータの取り出し</h3>
<div class="outline-text-3" id="text-3-2">
<div class="org-src-container">

<pre class="src src-ruby"><span style="color: #76ee00;">require</span> <span style="color: #ffa07a;">'sqlite3'</span>

db = <span style="color: #9370db;">SQLite3</span>::<span style="color: #9370db;">Database</span>.new(<span style="color: #ffa07a;">"test.db"</span>)
sql = <span style="color: #ffa07a;">"select * from test_table_rb order by id"</span>
db.execute(sql) { |id,name,age,gender|
  <span style="color: #76ee00;">print</span> <span style="color: #ffa07a;">"</span><span style="color: #9acd32;">#{id}</span><span style="color: #ffa07a;"> </span><span style="color: #9acd32;">#{name}</span><span style="color: #ffa07a;">\n"</span>
}
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#12371;&#12435;&#12394;&#12405;&#12358;&#12395;&#12418;&#26360;&#12369;&#12427;</span>
db.execute(sql) <span style="color: #20b2aa; font-weight: bold;">do</span> |row|
   <span style="color: #76ee00;">puts</span> row.join(<span style="color: #ffa07a;">"\t"</span>)
<span style="color: #20b2aa; font-weight: bold;">end</span>
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">&#36984;&#25246;&#32080;&#26524;&#12434; hash &#12391;&#24471;&#12427;</span>
db.results_as_hash = <span style="color: #1e90ff;">true</span>
db.execute(sql) <span style="color: #20b2aa; font-weight: bold;">do</span> |row|
   <span style="color: #76ee00;">puts</span> row
   <span style="color: #76ee00;">puts</span> row[<span style="color: #ffa07a;">"name"</span>]
<span style="color: #20b2aa; font-weight: bold;">end</span>
db.close
</pre>
</div>

<pre class="example">
1 hoge
2 fuga
1 hoge  20  m
2 fuga  30  f
{"id"=&gt;1, "name"=&gt;"hoge", "age"=&gt;20, "gender"=&gt;"m", 0=&gt;1, 1=&gt;"hoge", 2=&gt;20, 3=&gt;"m"}
hoge
{"id"=&gt;2, "name"=&gt;"fuga", "age"=&gt;30, "gender"=&gt;"f", 0=&gt;2, 1=&gt;"fuga", 2=&gt;30, 3=&gt;"f"}
fuga
</pre>
</div>
</div>
<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> 参考URL</h3>
<div class="outline-text-3" id="text-3-3">
<p>
<a href="http://shuzo-kino.hateblo.jp/entry/20120913/1347551619">http://shuzo-kino.hateblo.jp/entry/20120913/1347551619</a><br />
<a href="https://sites.google.com/site/rubycocoamemo/Home/ruby-guan-lian/sqlite-wo--ruby-de-tsukau">https://sites.google.com/site/rubycocoamemo/Home/ruby-guan-lian/sqlite-wo--ruby-de-tsukau</a><br />
<a href="http://d.hatena.ne.jp/pyopyopyo/20070325/p1">http://d.hatena.ne.jp/pyopyopyo/20070325/p1</a><br />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> julia</h2>
<div class="outline-text-2" id="text-4">
<div class="org-src-container">

<pre class="src src-sh">julia --version
</pre>
</div>

<pre class="example">
julia version 0.5.0
</pre>

<p>
using SQLite でエラーとなる場合は Pkg.add("SQLite") でインストールします.<br />
</p>
<div class="org-src-container">

<pre class="src src-sh">julia
</pre>
</div>
<pre class="example">
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: http://docs.julialang.org
   _ _   _| |_  __ _   |  Type "?help" for help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 0.5.0 (2016-09-19 18:14 UTC)
 _/ |\__'_|_|_|\__'_|  |
|__/                   |  x86_64-apple-darwin14.5.0

julia&gt; Pkg.add("SQLite")
</pre>
</div>

<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> database の作成とデータの挿入</h3>
<div class="outline-text-3" id="text-4-1">
<div class="org-src-container">

<pre class="src src-julia"><span style="color: #20b2aa; font-weight: bold;">using</span> SQLite

db  = SQLite.DB(<span style="color: #ffa07a;">"test.db"</span>)
sql =<span style="color: #ffa07a;">"create table if not exists test_table_jl (id int, name, age int, gender)"</span>
SQLite.query(db,sql)

sql = <span style="color: #ffa07a;">"insert into test_table_jl values (1,'hoge',20,'m')"</span>
SQLite.query(db,sql)
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">SQLite.execute!(db,sql)  # &#12371;&#12428;&#12391;&#12418;&#33391;&#12356;</span>

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">placeholder &#12434;&#20351;&#12387;&#12383;&#26360;&#12365;&#26041;</span>
sql = <span style="color: #ffa07a;">"insert into test_table_jl values (?,?,?,?)"</span>
stmt = SQLite.Stmt(db,sql)  <span style="color: #cd853f;"># </span><span style="color: #cd853f;">prepare &#12415;&#12383;&#12356;&#12394;&#12418;&#12435;</span>
vls=[2,<span style="color: #ffa07a;">"fuga"</span>,22,<span style="color: #ffa07a;">"f"</span>]
SQLite.bind!(stmt,vls)
SQLite.execute!(stmt)
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> select 文とデータの取り出し</h3>
<div class="outline-text-3" id="text-4-2">
<div class="org-src-container">

<pre class="src src-julia"><span style="color: #20b2aa; font-weight: bold;">using</span> SQLite
db  = SQLite.DB(<span style="color: #ffa07a;">"test.db"</span>)
sql =<span style="color: #ffa07a;">"select * from test_table_jl order by id"</span>
ext = SQLite.query(db,sql)
println(ext)
</pre>
</div>

<pre class="example">
2×4 DataFrames.DataFrame
│ Row │ id │ name   │ age │ gender │
├─────┼────┼────────┼─────┼────────┤
│ 1   │ 1  │ "hoge" │ 20  │ "m"    │
│ 2   │ 2  │ "fuga" │ 22  │ "f"    │
</pre>
</div>
</div>

<div id="outline-container-sec-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> 参考URL</h3>
<div class="outline-text-3" id="text-4-3">
<p>
<a href="https://github.com/JuliaDB/SQLite.jl/tree/2610faaaeea7cd92c38c29221101727445f7ab25">https://github.com/JuliaDB/SQLite.jl/tree/2610faaaeea7cd92c38c29221101727445f7ab25</a><br />
<a href="https://www.r-bloggers.com/julia-and-sqlite/">https://www.r-bloggers.com/julia-and-sqlite/</a><br />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> R</h2>
<div class="outline-text-2" id="text-5">
<div class="org-src-container">

<pre class="src src-sh">R --version
</pre>
</div>

<pre class="example">
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin14.5.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
http://www.gnu.org/licenses/.
</pre>

<p>
library("RSQLite") が失敗する場合は install.packages("RSQLite") でインストールします.<br />
</p>
<div class="org-src-container">

<pre class="src src-sh">R
</pre>
</div>
<pre class="example">
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin14.5.0 (64-bit)

R は、自由なソフトウェアであり、「完全に無保証」です。
一定の条件に従えば、自由にこれを再配布することができます。
配布条件の詳細に関しては、'license()' あるいは 'licence()' と入力してください。

R は多くの貢献者による共同プロジェクトです。
詳しくは 'contributors()' と入力してください。
また、R や R のパッケージを出版物で引用する際の形式については
'citation()' と入力してください。

'demo()' と入力すればデモをみることができます。
'help()' とすればオンラインヘルプが出ます。
'help.start()' で HTML ブラウザによるヘルプがみられます。
'q()' と入力すれば R を終了します。

&gt; install.packages("RSQLite")
</pre>
</div>

<div id="outline-container-sec-5-1" class="outline-3">
<h3 id="sec-5-1"><span class="section-number-3">5.1</span> database の作成とデータの挿入</h3>
<div class="outline-text-3" id="text-5-1">
<div class="org-src-container">

<pre class="src src-R"><span style="color: #1e90ff;">library</span>(<span style="color: #ffa07a;">"RSQLite"</span>)

con <span style="color: #1e90ff;">&lt;-</span> dbConnect(SQLite(),<span style="color: #ffa07a;">"test.db"</span>,synchronous=<span style="color: #ffa07a;">"off"</span>)
sql <span style="color: #1e90ff;">&lt;-</span> <span style="color: #ffa07a;">"create table if not exists test_table_R (id int, name text, age int, gender text)"</span>
dbSendQuery(con, sql)

sql <span style="color: #1e90ff;">&lt;-</span> <span style="color: #ffa07a;">"insert into test_table_R values (1,'hoge',20,'m')"</span>
dbSendQuery(con,sql)

<span style="color: #cd853f;"># </span><span style="color: #cd853f;">placeholder &#12434;&#20351;&#12358;&#12392;&#12365;.</span>
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">select &#12391;&#12418;&#21516;&#12376;&#24863;&#12376;&#12391;&#20986;&#26469;&#12427;&#12387;&#12413;&#12356;.</span>
<span style="color: #cd853f;"># </span><span style="color: #cd853f;">sql &lt;- "select * from ..." &#12395;&#12394;&#12427;&#12384;&#12369;. dbSendQuery &#12391;&#12356;&#12369;&#12427; see help(dbBind)</span>
sql <span style="color: #1e90ff;">&lt;-</span> <span style="color: #ffa07a;">"insert into test_table_R values (?,?,?,?)"</span>
res <span style="color: #1e90ff;">&lt;-</span> dbSendQuery(con,sql)
dbBind(res, c(1,<span style="color: #ffa07a;">'fuga'</span>,22,<span style="color: #ffa07a;">'f'</span>))
dbFetch(res)
dbDisconnect(con)
</pre>
</div>

<p>
R の場合, 組み込みのデータを使ってこれを SQLite に入れることがあるかも.<br />
</p>
<div class="org-src-container">

<pre class="src src-R"><span style="color: #1e90ff;">library</span>(<span style="color: #ffa07a;">"RSQLite"</span>)
con <span style="color: #1e90ff;">&lt;-</span> dbConnect(SQLite(), <span style="color: #ffa07a;">"testR.db"</span>, synchronous=<span style="color: #ffa07a;">"off"</span>)
dbWriteTable(con,<span style="color: #ffa07a;">"iris"</span>,iris)  <span style="color: #cd853f;"># </span><span style="color: #cd853f;">iris &#12398;&#12487;&#12540;&#12479;&#12434; "iris" table &#20869;&#12395;&#20837;&#12428;&#12427;</span>
sql <span style="color: #1e90ff;">&lt;-</span> <span style="color: #ffa07a;">"select * from iris order by 'Sepal.Length' limit 5"</span>
res <span style="color: #1e90ff;">&lt;-</span> dbGetQuery(con,sql)
res
</pre>
</div>

<pre class="example">
[1] TRUE
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
</pre>
</div>
</div>

<div id="outline-container-sec-5-2" class="outline-3">
<h3 id="sec-5-2"><span class="section-number-3">5.2</span> select 文とデータの取り出し</h3>
<div class="outline-text-3" id="text-5-2">
<div class="org-src-container">

<pre class="src src-R"><span style="color: #1e90ff;">library</span>(<span style="color: #ffa07a;">"RSQLite"</span>)
con <span style="color: #1e90ff;">&lt;-</span> dbConnect(SQLite(), <span style="color: #ffa07a;">"test.db"</span>, synchronous=<span style="color: #ffa07a;">"off"</span>)
sql <span style="color: #1e90ff;">&lt;-</span> <span style="color: #ffa07a;">"select * from test_table_R order by id"</span>
res <span style="color: #1e90ff;">&lt;-</span> dbGetQuery(con,sql)
res
dbDisconnect(con)
</pre>
</div>

<pre class="example">
  id name age gender
1  1 hoge  20      m
2  1 fuga  22      f
[1] TRUE
</pre>
</div>
</div>
<div id="outline-container-sec-5-3" class="outline-3">
<h3 id="sec-5-3"><span class="section-number-3">5.3</span> 参考URL</h3>
<div class="outline-text-3" id="text-5-3">
<p>
RからSQLiteを使う<br />
<a href="https://oku.edu.mie-u.ac.jp/~okumura/stat/sqlite.html">https://oku.edu.mie-u.ac.jp/~okumura/stat/sqlite.html</a><br />
DBI.pdf<br />
<a href="https://cran.r-project.org/web/packages/DBI/DBI.pdf">https://cran.r-project.org/web/packages/DBI/DBI.pdf</a><br />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> javascript(node.js)</h2>
<div class="outline-text-2" id="text-6">
<div class="org-src-container">

<pre class="src src-sh">node --version
</pre>
</div>

<pre class="example">
v7.4.0
</pre>
</div>

<div id="outline-container-sec-6-1" class="outline-3">
<h3 id="sec-6-1"><span class="section-number-3">6.1</span> database の作成とデータの挿入</h3>
<div class="outline-text-3" id="text-6-1">
<div class="org-src-container">

<pre class="src src-js"><span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">sqlite3</span> = require(<span style="color: #ffa07a;">'sqlite3'</span>)
sqlite3.verbose();
<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">file</span>=<span style="color: #ffa07a;">'test.db'</span>;
<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">db</span> = <span style="color: #20b2aa; font-weight: bold;">new</span> <span style="color: #9370db;">sqlite3.Database</span>(file); <span style="color: #cd853f;">// </span><span style="color: #cd853f;">file &#12398;&#20195;&#12431;&#12426;&#12395; :memory: &#12384;&#12392;&#12513;&#12514;&#12522;&#19978;&#12395;&#20316;&#25104;</span>
db.serialize(); <span style="color: #cd853f;">// </span><span style="color: #cd853f;">&#38750;&#21516;&#26399;&#12434;&#35299;&#38500;</span>
db.on(<span style="color: #ffa07a;">'error'</span>, <span style="color: #20b2aa; font-weight: bold;">function</span>(<span style="color: #9acd32;">err</span>) {console.error(err); process.exit(1); });
<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">sql</span>=<span style="color: #ffa07a;">'create table if not exists test_table_js (id int, name text, age int, gender text)'</span>;
db.run(sql);
sql = <span style="color: #ffa07a;">'insert into test_table_js values (?,?,?,?)'</span>;
db.run(sql,1,<span style="color: #ffa07a;">'hoge'</span>,20,<span style="color: #ffa07a;">'m'</span>);

<span style="color: #cd853f;">/* </span><span style="color: #cd853f;">&#20197;&#19979;&#12398;&#12424;&#12358;&#12395; hash &#12391;&#12450;&#12463;&#12475;&#12473;&#12418;&#12391;&#12365;&#12427;</span>
<span style="color: #cd853f;">var sql = 'insert or ignore into test_table_js (id,name) values ($i,$n)';</span>
<span style="color: #cd853f;">du.run(sql,{$i:3, $n:'fuga'});</span>
<span style="color: #cd853f;">*/</span>

<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">vls</span> = [2,<span style="color: #ffa07a;">'foo'</span>,22,<span style="color: #ffa07a;">'f'</span>];
db.run(sql,vls);
db.close();
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-6-2" class="outline-3">
<h3 id="sec-6-2"><span class="section-number-3">6.2</span> select 文とデータの取り出し</h3>
<div class="outline-text-3" id="text-6-2">
<div class="org-src-container">

<pre class="src src-js"><span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">sqlite3</span> = require(<span style="color: #ffa07a;">'sqlite3'</span>);
<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">file</span> = <span style="color: #ffa07a;">'test.db'</span>;
<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">db</span>   = <span style="color: #20b2aa; font-weight: bold;">new</span> <span style="color: #9370db;">sqlite3.Database</span>(file);
db.serialize();
db.on(<span style="color: #ffa07a;">'error'</span>,<span style="color: #20b2aa; font-weight: bold;">function</span>(<span style="color: #9acd32;">err</span>) {console.error(err); process.exit(1); });

<span style="color: #20b2aa; font-weight: bold;">var</span> <span style="color: #9acd32;">sql</span>  =<span style="color: #ffa07a;">'select * from test_table_js order by id'</span>;

<span style="color: #cd853f;">// </span><span style="color: #cd853f;">&#12402;&#12392;&#12388;&#12378;&#12388;&#12420;&#12427;&#22580;&#21512;</span>
db.each(sql,clbk01);

<span style="color: #20b2aa; font-weight: bold;">function</span> <span style="color: #00ff7f;">clbk01</span>(<span style="color: #9acd32;">err</span>,<span style="color: #9acd32;">row</span>) {  <span style="color: #cd853f;">// </span><span style="color: #cd853f;">row: &#19968;&#12388;&#12398;&#32080;&#26524;&#34892;&#12364;&#36820;&#12427;</span>
    <span style="color: #cd853f;">//</span><span style="color: #cd853f;">console.log(row.id+"\t"+row.name+"\t"+row.age);</span>
    <span style="color: #20b2aa; font-weight: bold;">if</span> (err) <span style="color: #20b2aa; font-weight: bold;">throw</span> err;
    console.log(row)
}

<span style="color: #cd853f;">// </span><span style="color: #cd853f;">&#20840;&#20214;&#12392;&#12426;&#12384;&#12375;&#12390;&#12363;&#12425;&#12394;&#12435;&#12363;&#12420;&#12427;&#22580;&#21512;</span>
<span style="color: #cd853f;">// </span><span style="color: #cd853f;">&#12503;&#12524;&#12540;&#12473;&#12507;&#12523;&#12480;&#20351;&#12360;&#12427;(&#19978;&#12398; each &#12391;&#12418;&#21516;&#27096;&#12395;&#20351;&#12360;&#12427;)</span>
sql =<span style="color: #ffa07a;">'select * from test_table_js order by ?'</span>;
db.all(sql,<span style="color: #ffa07a;">'id'</span>,clbk02);

<span style="color: #20b2aa; font-weight: bold;">function</span> <span style="color: #00ff7f;">clbk02</span>(<span style="color: #9acd32;">err</span>, <span style="color: #9acd32;">rows</span>) { <span style="color: #cd853f;">// </span><span style="color: #cd853f;">rows: &#32080;&#26524;&#20840;&#37096;&#12398;&#34892;&#12364;&#25147;&#12427;</span>
   <span style="color: #20b2aa; font-weight: bold;">if</span> (err) <span style="color: #20b2aa; font-weight: bold;">throw</span> err;
   rows.forEach(<span style="color: #20b2aa; font-weight: bold;">function</span>(<span style="color: #9acd32;">row</span>) { console.log(row); });
}
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-6-3" class="outline-3">
<h3 id="sec-6-3"><span class="section-number-3">6.3</span> 参考URL</h3>
<div class="outline-text-3" id="text-6-3">
<p>
Node.jsでSQLite3を使用する - 情報アイランド<br />
<a href="http://info-i.net/sqlite3">http://info-i.net/sqlite3</a><br />
Node.jsでsqlite3を使ってデータベースを操作する方法まとめ | Black Everyday Company<br />
<a href="http://kuroeveryday.blogspot.jp/2016/05/nodejs-sqlite3.html">http://kuroeveryday.blogspot.jp/2016/05/nodejs-sqlite3.html</a><br />
JavaScript | MDN<br />
<a href="https://developer.mozilla.org/ja/docs/Web/JavaScript">https://developer.mozilla.org/ja/docs/Web/JavaScript</a><br />
</p>
</div>
</div>
</div>
]]></content>
  </entry>
  
</feed>
